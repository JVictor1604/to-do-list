{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npcms\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\TO DO LIST - REACT\\\\to-do-list\\\\src\\\\components\\\\ListaAtividades\\\\ListaAtividades.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport \"./ListaAtividades.css\";\nimport { api } from \"utils/api\";\nimport ListaAtividadeItem from \"components/ListaAtividadesItem/ListaAtividadesItem\";\nimport AtividadesByIdModal from \"components/AtividadesByIdModal/AtividadesByIdModal\";\nimport { ActionMode } from \"constants/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AtividadeLista(_ref) {\n  _s();\n  let {\n    atividadeCriada,\n    mode,\n    updateAtividade,\n    deleteAtividade\n  } = _ref;\n  const [atividades, setAtividades] = useState([]);\n  const [atividadeModal, setAtividadeModal] = useState(false);\n  const adicionaAtividadeNaLista = useCallback(atividade => {\n    const lista = [...atividades, atividade];\n    setAtividades(lista);\n  }, [atividades]);\n  const getAtividadeById = async atividadeId => {\n    const response = await api.getAtividadeById(atividadeId);\n    const mapper = {\n      [ActionMode.NORMAL]: () => setAtividadeModal(response),\n      [ActionMode.ATUALIZAR]: () => updateAtividade(response),\n      [ActionMode.DELETAR]: () => deleteAtividade(response)\n    };\n    mapper[mode]();\n  };\n  const getAtividades = async () => {\n    const response = await api.getAllAtividades();\n    setAtividades(response);\n  };\n  useEffect(() => {\n    getAtividades();\n  }, []);\n  useEffect(() => {\n    if (atividadeCriada && !atividades.map(_ref2 => {\n      let {\n        id\n      } = _ref2;\n      return id;\n    }).includes(atividadeCriada.id)) {\n      adicionaAtividadeNaLista(atividadeCriada);\n    }\n  }, [adicionaAtividadeNaLista, atividadeCriada, atividades]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AtividadeLista\",\n    children: [atividades.map((atividade, index) => /*#__PURE__*/_jsxDEV(ListaAtividadeItem, {\n      className: \"listaAtividadeItem\",\n      atividade: atividade,\n      clickItem: atividadeId => getAtividadeById(atividadeId),\n      mode: mode\n    }, `AtividadeListaItem-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)), atividadeModal && /*#__PURE__*/_jsxDEV(AtividadesByIdModal, {\n      closeModal: () => setAtividadeModal(false),\n      atividades: atividadeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(AtividadeLista, \"8ohC0YCmti6qmee7Pb/RqkoAJGY=\");\n_c = AtividadeLista;\nexport default AtividadeLista;\nvar _c;\n$RefreshReg$(_c, \"AtividadeLista\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","api","ListaAtividadeItem","AtividadesByIdModal","ActionMode","AtividadeLista","atividadeCriada","mode","updateAtividade","deleteAtividade","atividades","setAtividades","atividadeModal","setAtividadeModal","adicionaAtividadeNaLista","atividade","lista","getAtividadeById","atividadeId","response","mapper","NORMAL","ATUALIZAR","DELETAR","getAtividades","getAllAtividades","map","id","includes","index"],"sources":["C:/Users/npcms/OneDrive/Área de Trabalho/TO DO LIST - REACT/to-do-list/src/components/ListaAtividades/ListaAtividades.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport \"./ListaAtividades.css\";\r\nimport { api } from \"utils/api\";\r\n\r\nimport ListaAtividadeItem from \"components/ListaAtividadesItem/ListaAtividadesItem\";\r\nimport AtividadesByIdModal from \"components/AtividadesByIdModal/AtividadesByIdModal\";\r\n\r\nimport { ActionMode } from \"constants/index\";\r\n\r\nfunction AtividadeLista({ atividadeCriada, mode, updateAtividade, deleteAtividade }) {\r\n\r\n    const [atividades, setAtividades] = useState([]);\r\n\r\n    const [atividadeModal, setAtividadeModal] = useState(false);\r\n\r\n\r\n    const adicionaAtividadeNaLista = useCallback(\r\n        \r\n        (atividade) => {\r\n        const lista = [...atividades, atividade];\r\n        setAtividades(lista);},\r\n        [atividades]);\r\n\r\n\r\n    const getAtividadeById = async (atividadeId) => {\r\n\r\n        const response = await api.getAtividadeById(atividadeId);\r\n\r\n        const mapper = {\r\n            [ActionMode.NORMAL]: () => setAtividadeModal(response),\r\n            [ActionMode.ATUALIZAR]: () => updateAtividade(response),\r\n            [ActionMode.DELETAR]: () => deleteAtividade(response),\r\n        };\r\n\r\n        mapper[mode]();\r\n    }\r\n\r\n\r\n\r\n\r\n    const getAtividades = async () => {\r\n        const response = await api.getAllAtividades()\r\n        setAtividades(response)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getAtividades();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (\r\n          atividadeCriada &&\r\n          !atividades.map(({ id }) => id).includes(atividadeCriada.id)\r\n        ) {\r\n          adicionaAtividadeNaLista(atividadeCriada);\r\n        }\r\n      }, [adicionaAtividadeNaLista, atividadeCriada, atividades]) \r\n\r\n\r\n    return (\r\n\r\n        <div className=\"AtividadeLista\">\r\n            {atividades.map((atividade, index) => (\r\n\r\n                <ListaAtividadeItem\r\n                    className=\"listaAtividadeItem\"\r\n                    key={`AtividadeListaItem-${index}`}\r\n                    atividade={atividade}\r\n                    clickItem={(atividadeId) => getAtividadeById(atividadeId)}\r\n                    mode={mode}\r\n\r\n                />\r\n            ))}\r\n\r\n            {\r\n                atividadeModal && (<AtividadesByIdModal\r\n                    closeModal={() => setAtividadeModal(false)}\r\n                    atividades={atividadeModal}\r\n                />)\r\n            }\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AtividadeLista;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAO,uBAAuB;AAC9B,SAASC,GAAG,QAAQ,WAAW;AAE/B,OAAOC,kBAAkB,MAAM,oDAAoD;AACnF,OAAOC,mBAAmB,MAAM,oDAAoD;AAEpF,SAASC,UAAU,QAAQ,iBAAiB;AAAC;AAE7C,SAASC,cAAc,OAA8D;EAAA;EAAA,IAA7D;IAAEC,eAAe;IAAEC,IAAI;IAAEC,eAAe;IAAEC;EAAgB,CAAC;EAE/E,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAG3D,MAAMe,wBAAwB,GAAGd,WAAW,CAEvCe,SAAS,IAAK;IACf,MAAMC,KAAK,GAAG,CAAC,GAAGN,UAAU,EAAEK,SAAS,CAAC;IACxCJ,aAAa,CAACK,KAAK,CAAC;EAAC,CAAC,EACtB,CAACN,UAAU,CAAC,CAAC;EAGjB,MAAMO,gBAAgB,GAAG,MAAOC,WAAW,IAAK;IAE5C,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACgB,gBAAgB,CAACC,WAAW,CAAC;IAExD,MAAME,MAAM,GAAG;MACX,CAAChB,UAAU,CAACiB,MAAM,GAAG,MAAMR,iBAAiB,CAACM,QAAQ,CAAC;MACtD,CAACf,UAAU,CAACkB,SAAS,GAAG,MAAMd,eAAe,CAACW,QAAQ,CAAC;MACvD,CAACf,UAAU,CAACmB,OAAO,GAAG,MAAMd,eAAe,CAACU,QAAQ;IACxD,CAAC;IAEDC,MAAM,CAACb,IAAI,CAAC,EAAE;EAClB,CAAC;EAKD,MAAMiB,aAAa,GAAG,YAAY;IAC9B,MAAML,QAAQ,GAAG,MAAMlB,GAAG,CAACwB,gBAAgB,EAAE;IAC7Cd,aAAa,CAACQ,QAAQ,CAAC;EAC3B,CAAC;EAGDrB,SAAS,CAAC,MAAM;IACZ0B,aAAa,EAAE;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN1B,SAAS,CAAC,MAAM;IACZ,IACEQ,eAAe,IACf,CAACI,UAAU,CAACgB,GAAG,CAAC;MAAA,IAAC;QAAEC;MAAG,CAAC;MAAA,OAAKA,EAAE;IAAA,EAAC,CAACC,QAAQ,CAACtB,eAAe,CAACqB,EAAE,CAAC,EAC5D;MACAb,wBAAwB,CAACR,eAAe,CAAC;IAC3C;EACF,CAAC,EAAE,CAACQ,wBAAwB,EAAER,eAAe,EAAEI,UAAU,CAAC,CAAC;EAG7D,oBAEI;IAAK,SAAS,EAAC,gBAAgB;IAAA,WAC1BA,UAAU,CAACgB,GAAG,CAAC,CAACX,SAAS,EAAEc,KAAK,kBAE7B,QAAC,kBAAkB;MACf,SAAS,EAAC,oBAAoB;MAE9B,SAAS,EAAEd,SAAU;MACrB,SAAS,EAAGG,WAAW,IAAKD,gBAAgB,CAACC,WAAW,CAAE;MAC1D,IAAI,EAAEX;IAAK,GAHL,sBAAqBsB,KAAM,EAAC;MAAA;MAAA;MAAA;IAAA,QAMzC,CAAC,EAGEjB,cAAc,iBAAK,QAAC,mBAAmB;MACnC,UAAU,EAAE,MAAMC,iBAAiB,CAAC,KAAK,CAAE;MAC3C,UAAU,EAAED;IAAe;MAAA;MAAA;MAAA;IAAA,QAC5B;EAAA;IAAA;IAAA;IAAA;EAAA,QAGL;AAGd;AAAC,GA5EQP,cAAc;AAAA,KAAdA,cAAc;AA8EvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}